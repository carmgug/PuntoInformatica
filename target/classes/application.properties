#server
server.port=8081
server.error.include-message=always
#security
# enable/disable https
server.ssl.enabled=true
# keystore format
server.ssl.key-store-type=PKCS12
# keystore location
server.ssl.key-store=classpath:keystore/puntoinformatica.p12
# keystore password
server.ssl.key-store-password=carmelogug

#set-up KeyCloak as an authorization server
keycloak.realm=PuntoInformatica
keycloak.resource=puntoinformatica-springboot
#The base URL of the Keycloak server
keycloak.auth-server-url = http://localhost:8080/auth
keycloak.ssl-required = external
#keycloak.use-resource-role-mappings = true

#Dobbiamo settarlo true perch� il servizio backend non
#si occuper� dell'autenticazione, scopo soddisfatto dall'applicazione front-end
keycloak.bearer-only = true

spring.security.oauth2.resourceserver.opaquetoken.client-id=puntoinformatica-springboot
spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8080/realms/PuntoInformatica
spring.security.oauth2.resourceserver.jwt.jwk-set-uri= http://localhost:8080/realms/PuntoInformatica/protocol/openid-connect/certs

#spring

spring.application.name= PuntoInformatica
#jpa
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#sql
spring.sql.init.platform=postgres
#datasource
spring.datasource.url=jdbc:postgresql://localhost:5432/Puntoinformatica
spring.datasource.username=postgres
spring.datasource.password=carmelogug


